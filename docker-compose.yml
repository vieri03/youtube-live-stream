services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: kafka_user
      POSTGRES_PASSWORD: kafka_pass
      POSTGRES_DB: kafka_db
    ports:
      - "5432:5432"
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - kafka-net

  producer:
    build: ./producer
    container_name: kafka-producer
    depends_on:
      - kafka
    networks:
      - kafka-net

  consumer:
    build: ./consumer
    container_name: kafka-consumer
    depends_on:
      - kafka
      - postgres
    networks:
      - kafka-net
  
  risingwave:
    image: risingwavelabs/risingwave:latest
    container_name: risingwave
    ports:
      - "4566:4566"  # PostgreSQL-compatible port
    depends_on:
      - kafka
    environment:
      RW_CONNECTOR_KAFKA_BROKERS: "kafka:9092"
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
